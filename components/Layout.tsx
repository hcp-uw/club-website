import { Box, Flex } from "@chakra-ui/react";
import { useMediaQuery } from "@chakra-ui/react";
import Head from "next/head";
import { ReactElement, useEffect, useState } from "react";
import Footer from "./Footer";
import Header from "./Header";
import Sidebar from "./Sidebar";

export default function Layout({ children }: { children: ReactElement }) {
    const [scrollDirection, setScrollDirection] = useState("up");
    const [isLargerThan1200] = useMediaQuery("(min-width: 1200px)", {
        ssr: true,
        fallback: true, // return false on the server, and re-evaluate on the client side
    });
    const [showSide, setShowSide] = useState(false);

    // This effect hides/shows the header on scroll
    useEffect(() => {
        if (typeof window !== "undefined") {
            let lastScrollY = window.pageYOffset;

            const updateScrollDirection = () => {
                const scrollY = window.pageYOffset;
                const direction = scrollY > lastScrollY ? "down" : "up";
                if (
                    direction !== scrollDirection &&
                    (scrollY - lastScrollY > 10 || scrollY - lastScrollY < -10)
                ) {
                    setScrollDirection(direction);
                }
                lastScrollY = scrollY > 0 ? scrollY : 0;
            };
            window.addEventListener("scroll", updateScrollDirection);
            return () => {
                if (typeof window !== "undefined") {
                    window.removeEventListener("scroll", updateScrollDirection);
                }
            };
        }
    }, [scrollDirection]);

    const showSidebar = () => {
        setShowSide(!showSide);
    };

    return (
        <>
            <Head>
                <title>Husky Coding Project</title>
                <meta
                    name="Husky Coding Project Club Website"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Flex
                flexDirection="column"
                minH="100vh"
                bgGradient="linear(to-b, brand.blue, brand.dark_blue)"
            >
                <Box
                    position="fixed"
                    top={scrollDirection === "up" ? "0px" : "-150px"}
                    transitionProperty="all"
                    transitionTimingFunction="cubic-bezier(0.4, 0, 0.2, 1)"
                    transitionDuration="500ms"
                    width="100vw"
                    backdropFilter="blur(10px)"
                    zIndex="98"
                >
                    <Header showSidebar={showSidebar} />
                </Box>
                {!isLargerThan1200 && (
                    <Sidebar show={showSide} handleShow={showSidebar} />
                )}
                <Box
                    marginTop={isLargerThan1200 ? "150px" : "100px"}
                    width="100vw"
                >
                    {children}
                </Box>
                <Footer />
            </Flex>
        </>
    );
}
